<?php
// =========================================
//	SET UP THEME OPTIONS
// =========================================

// Theme Option main headings

if( function_exists('acf_add_options_page') ) {
	
	acf_add_options_page(array(
		'page_title' 	=> THEME_NAME . ' Options',
		'menu_title'	=> 'Theme Options',
		'menu_slug' 	=> 'theme-global-settings',
		'capability'	=> 'edit_posts',
		'redirect'		=> true // Makes it so clicking "Theme Options" actually opens whatever the first sub-option is. Otherwise it's a little confusing what the user is looking at there.
	));

	acf_add_options_sub_page(array(
		'page_title' 	=> 'Global Settings',
		'menu_title'	=> 'Global',
		'parent_slug'	=> 'theme-global-settings',
	));
	
	acf_add_options_sub_page(array(
		'page_title' 	=> 'Header Settings',
		'menu_title'	=> 'Header',
		'parent_slug'	=> 'theme-global-settings',
	));

	acf_add_options_sub_page(array(
		'page_title' 	=> 'Mobile Menu Settings',
		'menu_title'	=> 'Mobile Menu',
		'parent_slug'	=> 'theme-global-settings',
	));
	
	acf_add_options_sub_page(array(
		'page_title' 	=> 'Footer Settings',
		'menu_title'	=> 'Footer',
		'parent_slug'	=> 'theme-global-settings',
	));

	acf_add_options_sub_page(array(
		'page_title' 	=> 'Typography Settings',
		'menu_title'	=> 'Typography',
		'parent_slug'	=> 'theme-global-settings',
	));

	acf_add_options_sub_page(array(
		'page_title' 	=> 'Color Settings',
		'menu_title'	=> 'Color',
		'parent_slug'	=> 'theme-global-settings',
	));

	acf_add_options_sub_page(array(
		'page_title' 	=> 'CTA Settings',
		'menu_title'	=> 'CTAs',
		'parent_slug'	=> 'theme-global-settings',
	));

	acf_add_options_sub_page(array(
		'page_title' 	=> 'Social Options',
		'menu_title'	=> 'Social Options',
		'parent_slug'	=> 'theme-global-settings',
	));

	acf_add_options_sub_page(array(
		'page_title' 	=> 'Schema Options',
		'menu_title'	=> 'Schema Options',
		'parent_slug'	=> 'theme-global-settings',
	));
	
}

// Mobile Menu
if( function_exists('acf_add_local_field_group') ):

acf_add_local_field_group(array(
	'key' => 'group_605a674139360',
	'title' => 'Theme Options: Mobile Menu',
	'fields' => array(
		array(
			'key' => 'field_5e7cbc688a48c',
			'label' => 'Mobile Menu Item Color',
			'name' => 'nav_color_mobile',
			'type' => 'color_picker',
			'instructions' => 'The color for links in the mobile pop-out nav.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '33',
				'class' => '',
				'id' => '',
			),
			'default_value' => '#ffffff',
		),
		array(
			'key' => 'field_5e7cbc9c8a48d',
			'label' => 'Mobile Menu Background Color',
			'name' => 'nav_bg_color_mobile',
			'type' => 'color_picker',
			'instructions' => 'The color for the background of the mobile pop-out menu.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '33',
				'class' => '',
				'id' => '',
			),
			'default_value' => '#ffffff',
		),
		array(
			'key' => 'field_5f282371a4720',
			'label' => 'Background Image',
			'name' => 'mobile_background_image',
			'type' => 'image',
			'instructions' => 'Image to go behind the mobile menu.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '33',
				'class' => '',
				'id' => '',
			),
			'return_format' => 'url',
			'preview_size' => 'medium',
			'library' => 'all',
			'min_width' => '',
			'min_height' => '',
			'min_size' => '',
			'max_width' => '',
			'max_height' => '',
			'max_size' => '',
			'mime_types' => '',
		),
		array(
			'key' => 'field_5e7ccc131b91a',
			'label' => 'Mobile Menu Logo',
			'name' => 'mobile_logo',
			'type' => 'image',
			'instructions' => 'Logo for the top of the flyout mobile menu. By design, this should be a white transparent PNG.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '50',
				'class' => '',
				'id' => '',
			),
			'return_format' => 'array',
			'preview_size' => 'medium',
			'library' => 'all',
			'min_width' => '',
			'min_height' => '',
			'min_size' => '',
			'max_width' => '',
			'max_height' => '',
			'max_size' => '',
			'mime_types' => '',
		),
		array(
			'key' => 'field_5e7ccc651b91c',
			'label' => 'Mobile Logo BG Color',
			'name' => 'mobile_logo_bg_color',
			'type' => 'radio',
			'instructions' => 'Background color behind the logo for the flyout mobile menu.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '50',
				'class' => '',
				'id' => '',
			),
			'choices' => array(
				'bg-c1' => 'Primary Theme Color from Theme Options',
				'bg-c2' => 'Secondary Theme Color from Theme Options',
				'bg-white' => 'White Theme Color from Theme Options',
				'bg-black' => 'Black Theme Color from Theme Options',
				'none' => 'No Background Color',
			),
			'allow_null' => 0,
			'other_choice' => 0,
			'default_value' => '',
			'layout' => 'vertical',
			'return_format' => 'value',
			'save_other_choice' => 0,
		),
		array(
			'key' => 'field_5e7cc0419e85f',
			'label' => 'Mobile Nav',
			'name' => 'nav_typography_mobile',
			'type' => 'group',
			'instructions' => 'Set the typography for the mobile nav menu.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'layout' => 'block',
			'sub_fields' => array(
				array(
					'key' => 'field_5e7cc0419e860',
					'label' => 'Font Identifier',
					'name' => 'font',
					'type' => 'text',
					'instructions' => 'Enter the font stack here (like "Oswald", sans-serif).',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e7cc0419e861',
					'label' => 'Font Size',
					'name' => 'size',
					'type' => 'text',
					'instructions' => 'Enter the size and measurement for the font here (i.e. 18px, 1.5em, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e7cc0419e862',
					'label' => 'Font Weight',
					'name' => 'font_weight',
					'type' => 'text',
					'instructions' => 'Enter the font weight here (i.e. bold, 100, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e7cc0419e863',
					'label' => 'Line Height',
					'name' => 'line_height',
					'type' => 'text',
					'instructions' => 'Enter the letter spacing for the font here (i.e. 1px, 1rem, initial, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e7cc0419e864',
					'label' => 'Letter Spacing',
					'name' => 'letter_spacing',
					'type' => 'text',
					'instructions' => 'Enter the letter spacing for the font here (i.e. 1px, 1rem, initial, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e7cc0419e865',
					'label' => 'Text Transform',
					'name' => 'text_transform',
					'type' => 'select',
					'instructions' => 'Select the type of text transformation this font style should have (uppercase, lowercase, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'choices' => array(
						'none' => 'none (text remains exactly as typed',
						'lowercase' => 'Lowercase (makes all of the letters in the selected text lowercase',
						'uppercase' => 'Uppercase (makes all of the letters in the selected text uppercase',
						'capitalize' => 'Capitalize (capitalizes the first letter of each word in the selected text',
						'inherit' => 'Inherit (gives the text the case and capitalization of its parent',
					),
					'default_value' => array(
					),
					'allow_null' => 1,
					'multiple' => 0,
					'ui' => 0,
					'ajax' => 0,
					'return_format' => 'value',
					'placeholder' => '',
				),
			),
		),
		array(
			'key' => 'field_5f2823d7a4723',
			'label' => 'Hamburger Icon',
			'name' => 'mobile_hamburger_icon',
			'type' => 'text',
			'instructions' => 'Enter the full Font Awesome i tag for the hamburger button icon used to open the mobile menu. https://fontawesome.com/icons?d=gallery',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'default_value' => '<i class="fal fa-bars"></i>',
			'placeholder' => '',
			'prepend' => '',
			'append' => '',
			'maxlength' => '',
		),
		array(
			'key' => 'field_5f28242ca4724',
			'label' => 'Top Right Icon',
			'name' => 'mobile_top_right_icon',
			'type' => 'text',
			'instructions' => 'Enter the full Font Awesome i tag for the button icon in the top right of the mobile top nav. https://fontawesome.com/icons?d=gallery. Per design this was for a phone (click to call).',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '50',
				'class' => '',
				'id' => '',
			),
			'default_value' => '<i class="fas fa-phone"></i>',
			'placeholder' => '',
			'prepend' => '',
			'append' => '',
			'maxlength' => '',
		),
		array(
			'key' => 'field_5f2828d7a4725',
			'label' => 'Top Right Link',
			'name' => 'mobile_top_right_link',
			'type' => 'text',
			'instructions' => 'Link to open when the phone icon in the mobile top nav is clicked. If this is a phone number, the syntax is tel:4352145301, if it\'s an email address the syntax is mailto:name@address.com.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '50',
				'class' => '',
				'id' => '',
			),
			'default_value' => '',
			'placeholder' => '',
			'prepend' => '',
			'append' => '',
			'maxlength' => '',
		),
		array(
			'key' => 'field_5f2822f3a471e',
			'label' => 'Close Icon',
			'name' => 'mobile_close_icon',
			'type' => 'text',
			'instructions' => 'Enter the full Font Awesome i tag for the close button icon when the mobile menu is open. https://fontawesome.com/icons?d=gallery',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '50',
				'class' => '',
				'id' => '',
			),
			'default_value' => '<i class="fal fa-times"></i>',
			'placeholder' => '',
			'prepend' => '',
			'append' => '',
			'maxlength' => '',
		),
		array(
			'key' => 'field_5f2812e15ca2a',
			'label' => 'Close Text',
			'name' => 'mobile_close_text',
			'type' => 'text',
			'instructions' => 'Text to go next to the opened mobile menu close icon.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '50',
				'class' => '',
				'id' => '',
			),
			'default_value' => 'Close',
			'placeholder' => '',
			'prepend' => '',
			'append' => '',
			'maxlength' => '',
		),
		array(
			'key' => 'field_5f28238a123af',
			'label' => 'Bottom Left Icon',
			'name' => 'mobile_left_icon',
			'type' => 'text',
			'instructions' => 'Icon to go next to the bottom left button text. Enter the entire Font Awesome 5 &lt;i&gt; tag from https://fontawesome.com/icons/',
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '25',
				'class' => '',
				'id' => '',
			),
			'return_format' => 'array',
		),
		array(
			'key' => 'field_5f282383a4721',
			'label' => 'Bottom Left Button',
			'name' => 'mobile_left_button',
			'type' => 'link',
			'instructions' => 'Button to go on the bottom left of the mobile menu',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '25',
				'class' => '',
				'id' => '',
			),
			'return_format' => 'array',
		),
		array(
			'key' => 'field_5f28238a123ae',
			'label' => 'Bottom Right Icon',
			'name' => 'mobile_right_icon',
			'type' => 'text',
			'instructions' => 'Icon to go next to the bottom right button text. Enter the entire Font Awesome 5 &lt;i&gt; tag from https://fontawesome.com/icons/',
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '25',
				'class' => '',
				'id' => '',
			),
			'return_format' => 'array',
		),
		array(
			'key' => 'field_5f2823afa4722',
			'label' => 'Bottom Right Button',
			'name' => 'mobile_right_button',
			'type' => 'link',
			'instructions' => 'Button to go on the bottom right of the mobile menu',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '25',
				'class' => '',
				'id' => '',
			),
			'return_format' => 'array',
		),
	),
	'location' => array(
		array(
			array(
				'param' => 'options_page',
				'operator' => '==',
				'value' => 'acf-options-mobile-menu',
			),
		),
	),
	'menu_order' => 0,
	'position' => 'normal',
	'style' => 'default',
	'label_placement' => 'top',
	'instruction_placement' => 'label',
	'hide_on_screen' => '',
	'active' => true,
	'description' => '',
));

endif;

// Theme Option fields

if( function_exists('acf_add_local_field_group') ):

acf_add_local_field_group(array(
	'key' => 'group_5e2621e2b5b82',
	'title' => 'Theme Options: Color',
	'fields' => array(
		array(
			'key' => 'field_5e2626b642891',
			'label' => 'Pre-Set Color Options',
			'name' => '',
			'type' => 'tab',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'placement' => 'top',
			'endpoint' => 0,
		),
		array(
			'key' => 'field_5e2f54cf14aed',
			'label' => 'Global Color Opacity',
			'name' => 'global_color_opacity',
			'type' => 'number',
			'instructions' => 'Set an opacity level from 0 (completely transparent) to 1 (completely opaque) that will be applied by default to color overlays. For instance, to set the global opacity to 75%, you would enter 0.75 here.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'default_value' => '0.75',
			'placeholder' => '',
			'prepend' => '',
			'append' => '',
			'min' => '',
			'max' => '',
			'step' => '',
		),
		array(
			'key' => 'field_5e2621f25bc2a',
			'label' => 'Theme Color: Primary (Color 1)',
			'name' => 'color_primary',
			'type' => 'color_picker',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '25',
				'class' => '',
				'id' => '',
			),
			'default_value' => '#750117',
		),
		array(
			'key' => 'field_5e2622f55bc2b',
			'label' => 'Theme Color: Secondary (Color 2)',
			'name' => 'color_secondary',
			'type' => 'color_picker',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '25',
				'class' => '',
				'id' => '',
			),
			'default_value' => '#171717',
		),
		array(
			'key' => 'field_5e2623125bc2c',
			'label' => 'Theme "White" Color',
			'name' => 'color_white',
			'type' => 'color_picker',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '25',
				'class' => '',
				'id' => '',
			),
			'default_value' => '#FFFFFF',
		),
		array(
			'key' => 'field_5e26236a5bc2d',
			'label' => 'Theme "Black" Color',
			'name' => 'color_black',
			'type' => 'color_picker',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '25',
				'class' => '',
				'id' => '',
			),
			'default_value' => '#000000',
		),
		array(
			'key' => 'field_5e26259a8d00d',
			'label' => 'Text Colors (including links)',
			'name' => '',
			'type' => 'accordion',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'open' => 1,
			'multi_expand' => 1,
			'endpoint' => 0,
		),
		array(
			'key' => 'field_5e2f5a03ad431',
			'label' => 'Theme Body Color',
			'name' => 'color_body',
			'type' => 'color_picker',
			'instructions' => 'Default color for text.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '25',
				'class' => '',
				'id' => '',
			),
			'default_value' => '#000000',
		),
		array(
			'key' => 'field_5e2623bf5bc2e',
			'label' => 'Text Link Color',
			'name' => 'color_link',
			'type' => 'color_picker',
			'instructions' => 'The color for text links, generally in body copy but not in nav menus.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '50',
				'class' => '',
				'id' => '',
			),
			'default_value' => '#750117',
		),
		array(
			'key' => 'field_5e2623ea5bc2f',
			'label' => 'Text Link Hover Color',
			'name' => 'color_link_hover',
			'type' => 'color_picker',
			'instructions' => 'The color for text links when hovered over.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '50',
				'class' => '',
				'id' => '',
			),
			'default_value' => '#171717',
		),
		array(
			'key' => 'field_5e2625b18d00e',
			'label' => 'End Text Link Accordion',
			'name' => '',
			'type' => 'accordion',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'open' => 0,
			'multi_expand' => 0,
			'endpoint' => 1,
		),
		array(
			'key' => 'field_5e2625d352a89',
			'label' => 'Menu Colors',
			'name' => '',
			'type' => 'accordion',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'open' => 1,
			'multi_expand' => 1,
			'endpoint' => 0,
		),
		array(
			'key' => 'field_5e2624155bc30',
			'label' => 'Top Menu Item Color',
			'name' => 'nav_color',
			'type' => 'color_picker',
			'instructions' => 'The color for links in the top nav. The design calls for this to be the same value as the White theme color.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '50',
				'class' => '',
				'id' => '',
			),
			'default_value' => '#ffffff',
		),
		array(
			'key' => 'field_5e2624305bc31',
			'label' => 'Top Menu Item Hover Color',
			'name' => 'nav_color_hover',
			'type' => 'color_picker',
			'instructions' => 'The color for links in the top nav when hovered over.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '50',
				'class' => '',
				'id' => '',
			),
			'default_value' => '#d9a875',
		),
		array(
			'key' => 'field_5e2625ee52a8a',
			'label' => 'End Menu Item Accordion',
			'name' => '',
			'type' => 'accordion',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'open' => 0,
			'multi_expand' => 0,
			'endpoint' => 1,
		),
		array(
			'key' => 'field_5e262780460ae',
			'label' => 'Custom Colors',
			'name' => '',
			'type' => 'tab',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'placement' => 'top',
			'endpoint' => 0,
		),
		array(
			'key' => 'field_5e2627e607793',
			'label' => 'Custom Color',
			'name' => 'custom_color',
			'type' => 'repeater',
			'instructions' => 'Sometimes you might need to add a new color class for when you write custom HTML, or you might need to override an existing element\'s color. If you want this color to be applied to a custom class, enter the class name in the "class" field below (include the "." before class names so it can be used for elements). Separate multiple class names with a comma and a space (like ".title-color, h1"). If left blank, the class name will just be ".color-#".',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'collapsed' => '',
			'min' => 0,
			'max' => 0,
			'layout' => 'row',
			'button_label' => '',
			'sub_fields' => array(
				array(
					'key' => 'field_5e26280207794',
					'label' => 'Class',
					'name' => 'class',
					'type' => 'text',
					'instructions' => '',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e26281f07795',
					'label' => 'Color',
					'name' => 'hex',
					'type' => 'color_picker',
					'instructions' => '',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
				),
			),
		),
		array(
			'key' => 'field_5e262772460ad',
			'label' => '',
			'name' => '',
			'type' => 'tab',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'placement' => 'top',
			'endpoint' => 1,
		),
	),
	'location' => array(
		array(
			array(
				'param' => 'options_page',
				'operator' => '==',
				'value' => 'acf-options-color',
			),
		),
	),
	'menu_order' => 0,
	'position' => 'normal',
	'style' => 'default',
	'label_placement' => 'top',
	'instruction_placement' => 'label',
	'hide_on_screen' => '',
	'active' => true,
	'description' => '',
));

if( function_exists('acf_add_local_field_group') ):

acf_add_local_field_group(array(
	'key' => 'group_604a48065c936',
	'title' => 'Footer Icons',
	'fields' => array(
		array(
			'key' => 'field_604a48157f54c',
			'label' => 'Footer Icons',
			'name' => 'footer_icons',
			'type' => 'repeater',
			'instructions' => 'Icons to appear below the contact row. By design these should be grayscaled images of relatively modest dimensions.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'collapsed' => '',
			'min' => 0,
			'max' => 0,
			'layout' => 'table',
			'button_label' => '',
			'sub_fields' => array(
				array(
					'key' => 'field_604a48397f54d',
					'label' => 'Image',
					'name' => 'image',
					'type' => 'image',
					'instructions' => 'Ideally a transparent PNG logo.',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'return_format' => 'array',
					'preview_size' => 'medium',
					'library' => 'all',
					'min_width' => '',
					'min_height' => '',
					'min_size' => '',
					'max_width' => '',
					'max_height' => '',
					'max_size' => '',
					'mime_types' => '',
				),
				array(
					'key' => 'field_604a4a19d4b02',
					'label' => 'Link',
					'name' => 'link',
					'type' => 'link',
					'instructions' => 'Optional link for where the image should go when clicked.',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'return_format' => 'array',
				),
			),
		),
	),
	'location' => array(
		array(
			array(
				'param' => 'options_page',
				'operator' => '==',
				'value' => 'acf-options-footer',
			),
		),
	),
	'menu_order' => 0,
	'position' => 'normal',
	'style' => 'default',
	'label_placement' => 'top',
	'instruction_placement' => 'label',
	'hide_on_screen' => '',
	'active' => true,
	'description' => '',
));

endif;

acf_add_local_field_group(array(
	'key' => 'group_5e3b424abde58',
	'title' => 'Theme Options: Footer',
	'fields' => array(
		array(
			'key' => 'field_5e3b427baf54c',
			'label' => 'Footer BG Color',
			'name' => 'footer_bg_color',
			'type' => 'select',
			'instructions' => 'If the entire footer should have a background color, choose it here. You can also choose overrides for specific rows if needed.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'choices' => array(
				'bg-c1' => 'Primary Theme Color from Theme Options',
				'bg-c2' => 'Secondary Theme Color from Theme Options',
				'bg-white' => 'White Theme Color from Theme Options',
				'bg-black' => 'Black Theme Color from Theme Options',
			),
			'default_value' => array(
			),
			'allow_null' => 1,
			'multiple' => 0,
			'ui' => 0,
			'return_format' => 'value',
			'ajax' => 0,
			'placeholder' => '',
		),
		array(
			'key' => 'field_5e3b42d6af54d',
			'label' => 'Text & Icon Colors',
			'name' => 'footer_icon_colors',
			'type' => 'select',
			'instructions' => 'Set what color the social icons and general text should be by default.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'choices' => array(
				'fg-c1' => 'Primary Theme Color',
				'fg-c2' => 'Secondary Theme Color',
				'fg-white' => 'White Theme Color',
				'fg-black' => 'Black Theme Color',
				'fg-body' => '"Body" Theme Color',
			),
			'default_value' => array(
			),
			'allow_null' => 0,
			'multiple' => 0,
			'ui' => 0,
			'return_format' => 'value',
			'ajax' => 0,
			'placeholder' => '',
		),
		array(
			'key' => 'field_5e611dea9cfc5',
			'label' => 'Footer BG Image',
			'name' => 'footer_bg_image',
			'type' => 'image',
			'instructions' => 'If a background image should be used behind the entire footer, choose it here.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'return_format' => 'array',
			'preview_size' => 'medium',
			'library' => 'all',
			'min_width' => '',
			'min_height' => '',
			'min_size' => '',
			'max_width' => '',
			'max_height' => '',
			'max_size' => '',
			'mime_types' => '',
		),
		array(
			'key' => 'field_5e61249e5e4c4',
			'label' => 'Blur Footer Image?',
			'name' => 'blur_footer_image',
			'type' => 'true_false',
			'instructions' => 'Choose whether the background image should be blurred or not',
			'required' => 0,
			'conditional_logic' => array(
				array(
					array(
						'field' => 'field_5e611dea9cfc5',
						'operator' => '!=empty',
					),
				),
			),
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'message' => 'If checked, whatever image is uploaded will have a blur effect applied to it.',
			'default_value' => 0,
			'ui' => 0,
			'ui_on_text' => '',
			'ui_off_text' => '',
		),
		array(
			'key' => 'field_5e611e7f9cfc7',
			'label' => 'Footer Rows',
			'name' => 'footer_rows',
			'type' => 'repeater',
			'instructions' => 'The footer can accommodate multiple rows of content, each with a variable number of columns and options.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'collapsed' => 'field_5e611ead9cfc8',
			'min' => 0,
			'max' => 0,
			'layout' => 'row',
			'button_label' => '',
			'sub_fields' => array(
				array(
					'key' => 'field_5e611ead9cfc8',
					'label' => 'BG Color',
					'name' => 'bg_color',
					'type' => 'select',
					'instructions' => 'Choose a background color that will go behind this row, but on top of any background colors or images from the main, overall footer.',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'choices' => array(
						'bg-c1' => 'Theme Color 1',
						'bg-c2' => 'Theme Color 2',
						'bg-white' => 'White Theme Color',
						'bg-black' => 'Black Theme Color',
						'none' => 'No overlay',
					),
					'default_value' => array(
						0 => 'none',
					),
					'allow_null' => 0,
					'multiple' => 0,
					'ui' => 0,
					'return_format' => 'value',
					'ajax' => 0,
					'placeholder' => '',
				),
				array(
					'key' => 'field_5e611f699cfc9',
					'label' => 'BG Transparency',
					'name' => 'bg_transparency',
					'type' => 'select',
					'instructions' => 'Choose a transparency for the selected row background color.',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'choices' => array(
						'0.1' => '10%',
						'0.15' => '15%',
						'0.2' => '20%',
						'0.25' => '25%',
						'0.3' => '30%',
						'0.35' => '35%',
						'0.4' => '40%',
						'0.45' => '45%',
						'0.5' => '50%',
						'0.55' => '55%',
						'0.6' => '60%',
						'0.65' => '65%',
						'0.7' => '70%',
						'0.75' => '75%',
						'0.8' => '80%',
						'0.85' => '85%',
						'0.9' => '90%',
						'0.95' => '95%',
						1 => '100%',
					),
					'default_value' => array(
						0 => '0.25',
					),
					'allow_null' => 0,
					'multiple' => 0,
					'ui' => 0,
					'return_format' => 'value',
					'ajax' => 0,
					'placeholder' => '',
				),
				array(
					'key' => 'field_5e6120349cfca',
					'label' => 'Row Width',
					'name' => 'width',
					'type' => 'radio',
					'instructions' => 'Choose whether this row should be full width (all the way across the screen no matter how wide) or constrained width (limited to a max width set by the overall theme for content areas).',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'choices' => array(
						'full-width' => 'Full Width',
						'constrained-width' => 'Constrained Width',
					),
					'allow_null' => 0,
					'other_choice' => 0,
					'default_value' => 'constrained-width',
					'layout' => 'vertical',
					'return_format' => 'value',
					'save_other_choice' => 0,
				),
				array(
					'key' => 'field_5e61208b9cfcb',
					'label' => 'Columns',
					'name' => 'columns',
					'type' => 'repeater',
					'instructions' => 'Each row can have one or more columns of variable content.',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'collapsed' => 'field_5e6120a29cfcc',
					'min' => 0,
					'max' => 0,
					'layout' => 'row',
					'button_label' => 'Add Column',
					'sub_fields' => array(
						array(
							'key' => 'field_5e634ca5aa1b2',
							'label' => 'Column BG Image',
							'name' => 'bg_image',
							'type' => 'image',
							'instructions' => 'If a background image should be used behind this entire column, choose it here.',
							'required' => 0,
							'conditional_logic' => 0,
							'wrapper' => array(
								'width' => '',
								'class' => '',
								'id' => '',
							),
							'return_format' => 'url',
							'preview_size' => 'medium',
							'library' => 'all',
							'min_width' => '',
							'min_height' => '',
							'min_size' => '',
							'max_width' => '',
							'max_height' => '',
							'max_size' => '',
							'mime_types' => '',
						),
						array(
							'key' => 'field_5e6120c29cfcd',
							'label' => 'Alignment',
							'name' => 'alignment',
							'type' => 'select',
							'instructions' => 'Choose the overall alignment of the column\'s contents.',
							'required' => 0,
							'conditional_logic' => 0,
							'wrapper' => array(
								'width' => '',
								'class' => '',
								'id' => '',
							),
							'choices' => array(
								'align-column-left' => 'Left Aligned',
								'align-column-right' => 'Right Aligned',
								'align-column-center' => 'Center Aligned',
							),
							'default_value' => array(
							),
							'allow_null' => 0,
							'multiple' => 0,
							'ui' => 0,
							'return_format' => 'value',
							'ajax' => 0,
							'placeholder' => '',
						),
						array(
							'key' => 'field_5e61226e9cfcf',
							'label' => 'Text Color',
							'name' => 'text_color',
							'type' => 'select',
							'instructions' => 'Choose an override text color for this column. If blank, the text will inherit the color from the row. This also affects the colors of any social media icons.',
							'required' => 0,
							'conditional_logic' => 0,
							'wrapper' => array(
								'width' => '',
								'class' => '',
								'id' => '',
							),
							'choices' => array(
								'fg-c1' => 'Theme Color 1',
								'fg-c2' => 'Theme Color 2',
								'fg-white' => 'White Theme Color',
								'fg-black' => 'Black Theme Color',
							),
							'default_value' => array(
							),
							'allow_null' => 1,
							'multiple' => 0,
							'ui' => 0,
							'return_format' => 'value',
							'ajax' => 0,
							'placeholder' => '',
						),
						array(
							'key' => 'field_5e6120a29cfcc',
							'label' => 'Content',
							'name' => 'content',
							'type' => 'wysiwyg',
							'instructions' => 'Enter the main content for the column here. Accepts short codes, HTML, images, etc.',
							'required' => 0,
							'conditional_logic' => 0,
							'wrapper' => array(
								'width' => '',
								'class' => '',
								'id' => '',
							),
							'default_value' => '',
							'tabs' => 'all',
							'toolbar' => 'full',
							'media_upload' => 1,
							'delay' => 0,
						),
						array(
							'key' => 'field_5e3b434faf54f',
							'label' => 'Show social links?',
							'name' => 'show_social',
							'type' => 'true_false',
							'instructions' => 'Check to show the links from the "Social Settings" Theme Option tab in a row below the logo.',
							'required' => 0,
							'conditional_logic' => 0,
							'wrapper' => array(
								'width' => '',
								'class' => '',
								'id' => '',
							),
							'message' => '',
							'default_value' => 0,
							'ui' => 1,
							'ui_on_text' => 'Show Social Icons',
							'ui_off_text' => 'Do not Show Social Icons',
						),
						array(
							'key' => 'field_5e61251c917a8',
							'label' => 'Gravity Form To Show',
							'name' => 'gravity_form_to_show',
							'type' => 'gravity_forms_field',
							'instructions' => 'Choose which Gravity Form to include in this column (if any). The title, description, placeholder copy, and submit button will all be controlled in the settings for that form.',
							'required' => 0,
							'conditional_logic' => 0,
							'wrapper' => array(
								'width' => '',
								'class' => '',
								'id' => '',
							),
							'allow_null' => 1,
							'allow_multiple' => 0,
						),
						array(
							'key' => 'field_5e6123149cfd0',
							'label' => 'Show footer menu?',
							'name' => 'show_footer_menu',
							'type' => 'true_false',
							'instructions' => 'Choose whether to show the footer menu (set and chosen in Appearance -> Menus)	in this column.',
							'required' => 0,
							'conditional_logic' => 0,
							'wrapper' => array(
								'width' => '',
								'class' => '',
								'id' => '',
							),
							'message' => '',
							'default_value' => 0,
							'ui' => 0,
							'ui_on_text' => '',
							'ui_off_text' => '',
						),
						array(
							'key' => 'field_5e6123509cfd1',
							'label' => 'Footer Menu Alignment',
							'name' => 'footer_menu_alignment',
							'type' => 'select',
							'instructions' => 'Choose how the footer menu should align.',
							'required' => 0,
							'conditional_logic' => array(
								array(
									array(
										'field' => 'field_5e6123149cfd0',
										'operator' => '==',
										'value' => '1',
									),
								),
							),
							'wrapper' => array(
								'width' => '',
								'class' => '',
								'id' => '',
							),
							'choices' => array(
								'align-footer-menu-horizontal' => 'Horizontal',
								'align-footer-menu-vertical' => 'Vertical',
							),
							'default_value' => array(
							),
							'allow_null' => 0,
							'multiple' => 0,
							'ui' => 0,
							'return_format' => 'value',
							'ajax' => 0,
							'placeholder' => '',
						),
					),
				),
			),
		),
	),
	'location' => array(
		array(
			array(
				'param' => 'options_page',
				'operator' => '==',
				'value' => 'acf-options-footer',
			),
		),
	),
	'menu_order' => 0,
	'position' => 'normal',
	'style' => 'default',
	'label_placement' => 'top',
	'instruction_placement' => 'label',
	'hide_on_screen' => '',
	'active' => true,
	'description' => '',
));

acf_add_local_field_group(array(
	'key' => 'group_5e25e3d6ace46',
	'title' => 'Theme Options: Global',
	'fields' => array(
		array(
			'key' => 'field_5e25e465451b7',
			'label' => 'Favicon',
			'name' => 'favicon',
			'type' => 'image',
			'instructions' => 'Site favicon (32x32), the small icon showing up in the tab of the user\'s browser for this site.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'return_format' => 'url',
			'preview_size' => 'medium',
			'library' => 'all',
			'min_width' => '',
			'min_height' => '',
			'min_size' => '',
			'max_width' => '',
			'max_height' => '',
			'max_size' => '',
			'mime_types' => '',
		),
		array(
			'key' => 'field_5e25e40063bf8',
			'label' => '404 Options',
			'name' => '404_options',
			'type' => 'post_object',
			'instructions' => 'Choose a page to serve as the 404 ("Page Not Found") result when a visitor enters a URL that does not exist.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'post_type' => '',
			'taxonomy' => '',
			'allow_null' => 0,
			'multiple' => 0,
			'return_format' => 'id',
			'ui' => 1,
		),
		array(
			'key' => 'field_5e260ae382507',
			'label' => 'Global Scripts',
			'name' => 'global_scripts',
			'type' => 'repeater',
			'instructions' => 'Any text you enter here will be output directly to the site without filtering, so please, be careful – malicious scripts could destroy the site and compromise your customer data.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'collapsed' => 'field_5e26cb1942519',
			'min' => 0,
			'max' => 0,
			'layout' => 'block',
			'button_label' => 'Add Script',
			'sub_fields' => array(
				array(
					'key' => 'field_5e26cb1942519',
					'label' => 'Script Short Name',
					'name' => 'script_name',
					'type' => 'text',
					'instructions' => 'Just a short human-readable name for what this script is to make it easier to find when doing things in the CMS.',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e260b1982508',
					'label' => 'Script',
					'name' => 'script',
					'type' => 'textarea',
					'instructions' => 'Enter the actual script, including any tags or comments.',
					'required' => 1,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'maxlength' => '',
					'rows' => '',
					'new_lines' => '',
				),
				array(
					'key' => 'field_5e260b3982509',
					'label' => 'Script Location',
					'name' => 'script_location',
					'type' => 'radio',
					'instructions' => 'Choose where the script should be added to the site.',
					'required' => 1,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'choices' => array(
						'header_start' => 'In the header, immediately after the opening &lt;head&gt; tag.',
						'header_end' => 'In the header, just before the closing &lt;/head&gt; tag.',
						'body_start' => 'Immediately after the opening &lt;body&gt; tag.',
						'body_end' => 'Immediately before the closing &lt;/body&gt; tag.',
						'footer' => 'At the very end of the document, just before the closing &lt;/html&gt; tag.',
					),
					'allow_null' => 0,
					'other_choice' => 0,
					'default_value' => 'header_end',
					'layout' => 'vertical',
					'return_format' => 'value',
					'save_other_choice' => 0,
				),
				array(
					'key' => 'field_5e260c128250a',
					'label' => 'Enable Script',
					'name' => 'enable_script',
					'type' => 'true_false',
					'instructions' => 'Toggle the script on or off. This is provided for cases where you want to temporarily turn a script off, but you want to preserve it for later so you can turn it back on.',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'message' => '',
					'default_value' => 1,
					'ui' => 0,
					'ui_on_text' => '',
					'ui_off_text' => '',
				),
			),
		),
		array(
			'key' => 'field_5e5414a35d801',
			'label' => 'Global Icons and UI Elements',
			'name' => '',
			'type' => 'accordion',
			'instructions' => 'Icons used throughout the site. Each block or module will have its own default fallback images, but will use whatever is entered here if there is an entry.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'open' => 1,
			'multi_expand' => 0,
			'endpoint' => 0,
		),
		array(
			'key' => 'field_5e5411271e154',
			'label' => 'Video Play Icon',
			'name' => 'video_play_icon',
			'type' => 'image',
			'instructions' => 'Image to use as the "Play" button for images that link to a lightboxed video. Ideally this should be a transparent PNG.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'return_format' => 'array',
			'preview_size' => 'medium',
			'library' => 'all',
			'min_width' => '',
			'min_height' => '',
			'min_size' => '',
			'max_width' => '',
			'max_height' => '',
			'max_size' => '',
			'mime_types' => '',
		),
		array(
			'key' => 'field_5e5414e05d802',
			'label' => 'Slideshow Next Button',
			'name' => 'slideshow_next',
			'type' => 'image',
			'instructions' => 'Image to use as a "Next Slide" button in a slider.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'return_format' => 'url',
			'preview_size' => 'medium',
			'library' => 'all',
			'min_width' => '',
			'min_height' => '',
			'min_size' => '',
			'max_width' => '',
			'max_height' => '',
			'max_size' => '',
			'mime_types' => '',
		),
		array(
			'key' => 'field_5e5414f85d803',
			'label' => 'Slideshow Previous Button',
			'name' => 'slideshow_previous',
			'type' => 'image',
			'instructions' => 'Image to use as a "Previous Slide" button in a slider.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'return_format' => 'url',
			'preview_size' => 'medium',
			'library' => 'all',
			'min_width' => '',
			'min_height' => '',
			'min_size' => '',
			'max_width' => '',
			'max_height' => '',
			'max_size' => '',
			'mime_types' => '',
		),
	),
	'location' => array(
		array(
			array(
				'param' => 'options_page',
				'operator' => '==',
				'value' => 'acf-options-global',
			),
		),
	),
	'menu_order' => 0,
	'position' => 'normal',
	'style' => 'default',
	'label_placement' => 'top',
	'instruction_placement' => 'label',
	'hide_on_screen' => '',
	'active' => true,
	'description' => '',
));

acf_add_local_field_group(array(
	'key' => 'group_5e4472690bb91',
	'title' => 'Theme Options: Header',
	'fields' => array(
		array(
			'key' => 'field_5e7ccbe31b919',
			'label' => 'Desktop Header Logo',
			'name' => 'header_logo',
			'type' => 'image',
			'instructions' => 'Logo for the top left section of the header. Ideally this should be a transparent PNG.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '50',
				'class' => '',
				'id' => '',
			),
			'return_format' => 'array',
			'preview_size' => 'medium',
			'library' => 'all',
			'min_width' => '',
			'min_height' => '',
			'min_size' => '',
			'max_width' => '',
			'max_height' => '',
			'max_size' => '',
			'mime_types' => '',
		),
		array(
			'key' => 'field_5e7ccbe35bbaa',
			'label' => 'Desktop Snapped Logo',
			'name' => 'header_logo_snapped',
			'type' => 'image',
			'instructions' => 'Logo to show when the header snaps to the top of the screen Ideally this should be a transparent PNG. If blank, the existing logo will be  used instead.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '50',
				'class' => '',
				'id' => '',
			),
			'return_format' => 'array',
			'preview_size' => 'medium',
			'library' => 'all',
			'min_width' => '',
			'min_height' => '',
			'min_size' => '',
			'max_width' => '',
			'max_height' => '',
			'max_size' => '',
			'mime_types' => '',
		),
		array(
			'key' => 'field_5e545b6067833',
			'label' => 'Desktop Header BG Color',
			'name' => 'header_bg_color',
			'type' => 'radio',
			'instructions' => 'Background color for the top primary nav bar.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '25',
				'class' => '',
				'id' => '',
			),
			'choices' => array(
				'bg-c1' => 'Primary Theme Color from Theme Options',
				'bg-c2' => 'Secondary Theme Color from Theme Options',
				'bg-white' => 'White Theme Color from Theme Options',
				'bg-black' => 'Black Theme Color from Theme Options',
				'bg-c1-opacity' => 'Transparent Primary Theme Color',
				'bg-c2-opacity' => 'Transparent Secondary Theme Color',
				'bg-black-opacity' => 'Transparent Black Theme Color',
				'bg-white-opacity' => 'Transparent White Theme Color',
				'no-header-bg' => 'Transparent (no background color)',
			),
			'allow_null' => 0,
			'other_choice' => 0,
			'default_value' => '',
			'layout' => 'vertical',
			'return_format' => 'value',
			'save_other_choice' => 0,
		),
		array(
			'key' => 'field_5e545f4124c24',
			'label' => 'Desktop Header Text Color',
			'name' => 'header_text_color',
			'type' => 'radio',
			'instructions' => 'Text color for the top phone and reservations bar.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '25',
				'class' => '',
				'id' => '',
			),
			'choices' => array(
				'fg-c1' => 'Primary Theme Color from Theme Options',
				'fg-c2' => 'Secondary Theme Color from Theme Options',
				'fg-white' => 'White Theme Color from Theme Options',
				'fg-black' => 'Black Theme Color from Theme Options',
			),
			'allow_null' => 0,
			'other_choice' => 0,
			'default_value' => 'fg-white',
			'layout' => 'vertical',
			'return_format' => 'value',
			'save_other_choice' => 0,
		),
		array(
			'key' => 'field_5e545b606ba44',
			'label' => 'Snapped Main BG Color',
			'name' => 'header_bg_color_snapped',
			'type' => 'radio',
			'instructions' => 'Background color for the top primary nav bar when snapped.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '25',
				'class' => '',
				'id' => '',
			),
			'choices' => array(
				'bg-c1' => 'Primary Theme Color from Theme Options',
				'bg-c2' => 'Secondary Theme Color from Theme Options',
				'bg-white' => 'White Theme Color from Theme Options',
				'bg-black' => 'Black Theme Color from Theme Options',
				'bg-c1-opacity' => 'Transparent Primary Theme Color',
				'bg-c2-opacity' => 'Transparent Secondary Theme Color',
				'bg-black-opacity' => 'Transparent Black Theme Color',
				'bg-white-opacity' => 'Transparent White Theme Color',
				'no-header-bg' => 'Transparent (no background color)',
			),
			'allow_null' => 0,
			'other_choice' => 0,
			'default_value' => '',
			'layout' => 'vertical',
			'return_format' => 'value',
			'save_other_choice' => 0,
		),
		array(
			'key' => 'field_5e545b606ba46',
			'label' => 'Snapped Main BG Color Custom',
			'name' => 'header_bg_color_snapped_custom',
			'type' => 'color_picker',
			'instructions' => 'Custom color for the primary nav bg when snapped. Will override a non-custom color selection.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '25',
				'class' => '',
				'id' => '',
			),
		),
	),
	'location' => array(
		array(
			array(
				'param' => 'options_page',
				'operator' => '==',
				'value' => 'acf-options-header',
			),
		),
	),
	'menu_order' => 0,
	'position' => 'normal',
	'style' => 'default',
	'label_placement' => 'top',
	'instruction_placement' => 'label',
	'hide_on_screen' => '',
	'active' => true,
	'description' => '',
));

acf_add_local_field_group(array(
	'key' => 'group_5e45c4e48360c',
	'title' => 'Theme Options: Social',
	'fields' => array(
		array(
			'key' => 'field_5e45c56d1b40b',
			'label' => 'Social Media Account',
			'name' => 'social_media_account',
			'type' => 'repeater',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'collapsed' => '',
			'min' => 0,
			'max' => 0,
			'layout' => 'table',
			'button_label' => '',
			'sub_fields' => array(
				array(
					'key' => 'field_5e45c5841b40c',
					'label' => 'Social Media Account Name',
					'name' => 'name',
					'type' => 'text',
					'instructions' => 'Facebook, Instagram, etc.',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e45c5951b40d',
					'label' => 'Choose an icon from Font Awesome 5 (https://fontawesome.com/icons?d=gallery) to use as the hamburger button icon to open the mobile menu. Enter the full i tag, like &lt;i class="fas fa-times"&gt;&lt;/i&gt;.',
					'name' => 'icon',
					'type' => 'text',
					'instructions' => '',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e45c5f5cb41f',
					'label' => 'Icon (Custom)',
					'name' => 'icon_custom',
					'type' => 'image',
					'instructions' => 'If a manual icon is preferred, upload a transparent image here. It will be constrained by styles to the designed size. If a custom image is uploaded it will override a Font Awesome icon even if that field has content in it.',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'return_format' => 'array',
					'preview_size' => 'medium',
					'library' => 'all',
					'min_width' => '',
					'min_height' => '',
					'min_size' => '',
					'max_width' => '',
					'max_height' => '',
					'max_size' => '',
					'mime_types' => '',
				),
				array(
					'key' => 'field_5e45c5b31b40e',
					'label' => 'Social Media Account Link',
					'name' => 'link',
					'type' => 'url',
					'instructions' => '',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
				),
			),
		),
	),
	'location' => array(
		array(
			array(
				'param' => 'options_page',
				'operator' => '==',
				'value' => 'acf-options-social-options',
			),
		),
	),
	'menu_order' => 0,
	'position' => 'normal',
	'style' => 'default',
	'label_placement' => 'top',
	'instruction_placement' => 'label',
	'hide_on_screen' => '',
	'active' => true,
	'description' => '',
));

acf_add_local_field_group(array(
	'key' => 'group_5e7e333b26079',
	'title' => 'Theme Options: Structured Data',
	'fields' => array(
		array(
			'key' => 'field_5e7e4227ef7f7',
			'label' => 'Output Structured Data?',
			'name' => 'output_structured_data',
			'type' => 'true_false',
			'instructions' => 'Choose whether or not to output structured data for this site.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'message' => '',
			'default_value' => 0,
			'ui' => 1,
			'ui_on_text' => 'Output structured data',
			'ui_off_text' => 'Do NOT output structured data',
		),
		array(
			'key' => 'field_5e7e380b5ead0',
			'label' => 'Property Photo',
			'name' => 'schema_image',
			'type' => 'image',
			'instructions' => 'A compelling photo of the property.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '50',
				'class' => '',
				'id' => '',
			),
			'return_format' => 'url',
			'preview_size' => 'medium',
			'library' => 'all',
			'min_width' => '',
			'min_height' => '',
			'min_size' => '',
			'max_width' => '',
			'max_height' => '',
			'max_size' => '',
			'mime_types' => '',
		),
		array(
			'key' => 'field_5e7e38425ead1',
			'label' => 'Logo',
			'name' => 'schema_logo',
			'type' => 'image',
			'instructions' => 'The property\'s logo.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '50',
				'class' => '',
				'id' => '',
			),
			'return_format' => 'url',
			'preview_size' => 'medium',
			'library' => 'all',
			'min_width' => '',
			'min_height' => '',
			'min_size' => '',
			'max_width' => '',
			'max_height' => '',
			'max_size' => '',
			'mime_types' => '',
		),
		array(
			'key' => 'field_5e7e359b4129c',
			'label' => 'Name',
			'name' => 'schema_name',
			'type' => 'text',
			'instructions' => 'The name of the property.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '25',
				'class' => '',
				'id' => '',
			),
			'default_value' => '',
			'placeholder' => '',
			'prepend' => '',
			'append' => '',
			'maxlength' => '',
		),
		array(
			'key' => 'field_5e7e35bc4129d',
			'label' => 'Phone Local',
			'name' => 'schema_phone_local',
			'type' => 'text',
			'instructions' => 'Property Telephone Number (NOT Google Adwords or Navis tracked numbers). Should be in format xxx-xxx-xxxx.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '25',
				'class' => '',
				'id' => '',
			),
			'default_value' => '',
			'placeholder' => '',
			'prepend' => '',
			'append' => '',
			'maxlength' => '',
		),
		array(
			'key' => 'field_5e7e35fd4129e',
			'label' => 'Price Range',
			'name' => 'schema_price_range',
			'type' => 'text',
			'instructions' => 'Like $$$-$$$$. $: $55-$99/night; $$: $100-$150/night; $$$: $150-$300/night; $$$$: $300+/night',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '25',
				'class' => '',
				'id' => '',
			),
			'default_value' => '',
			'placeholder' => '',
			'prepend' => '',
			'append' => '',
			'maxlength' => '',
		),
		array(
			'key' => 'field_5e7e36234129f',
			'label' => 'Pets?',
			'name' => 'schema_pets',
			'type' => 'true_false',
			'instructions' => 'Does the property allow pets in rooms?',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '25',
				'class' => '',
				'id' => '',
			),
			'message' => '',
			'default_value' => 0,
			'ui' => 0,
			'ui_on_text' => '',
			'ui_off_text' => '',
		),
		array(
			'key' => 'field_5e7e3d401c112',
			'label' => 'Checkin Time',
			'name' => 'schema_checkin',
			'type' => 'time_picker',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '33',
				'class' => '',
				'id' => '',
			),
			'display_format' => 'g:i a',
			'return_format' => 'H:i:s',
		),
		array(
			'key' => 'field_5e7e3cc91c111',
			'label' => 'Checkout Time',
			'name' => 'schema_checkout',
			'type' => 'time_picker',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '33',
				'class' => '',
				'id' => '',
			),
			'display_format' => 'g:i a',
			'return_format' => 'H:i:s',
		),
		array(
			'key' => 'field_5e7e3d866e95a',
			'label' => 'Operating Hours (Like Mo-Su 00:00 - 24:00)',
			'name' => 'schema_operating_hours',
			'type' => 'text',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '33',
				'class' => '',
				'id' => '',
			),
			'default_value' => '',
			'placeholder' => '',
			'prepend' => '',
			'append' => '',
			'maxlength' => '',
		),
		array(
			'key' => 'field_5e7e37976b0c9',
			'label' => 'Email - General',
			'name' => 'schema_email_general',
			'type' => 'email',
			'instructions' => 'General contact address.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '50',
				'class' => '',
				'id' => '',
			),
			'default_value' => '',
			'placeholder' => '',
			'prepend' => '',
			'append' => '',
		),
		array(
			'key' => 'field_5e7e37c26b0ca',
			'label' => 'Email - Reservations',
			'name' => 'schema_email_reservations',
			'type' => 'email',
			'instructions' => 'Email address for reservation questions.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '50',
				'class' => '',
				'id' => '',
			),
			'default_value' => '',
			'placeholder' => '',
			'prepend' => '',
			'append' => '',
		),
		array(
			'key' => 'field_5e7e374a62e0f',
			'label' => 'Meta: Description',
			'name' => 'schema_description',
			'type' => 'textarea',
			'instructions' => 'Should be similar, but unique to a meta description for the homepage',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '50',
				'class' => '',
				'id' => '',
			),
			'default_value' => '',
			'placeholder' => '',
			'maxlength' => '',
			'rows' => '',
			'new_lines' => '',
		),
		array(
			'key' => 'field_5e7e376462e10',
			'label' => 'Meta: Keywords',
			'name' => 'schema_keywords',
			'type' => 'textarea',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '50',
				'class' => '',
				'id' => '',
			),
			'default_value' => '',
			'placeholder' => '',
			'maxlength' => '',
			'rows' => '',
			'new_lines' => '',
		),
		array(
			'key' => 'field_5e7e3e122eab1',
			'label' => 'Amenities',
			'name' => 'schema_amenities',
			'type' => 'repeater',
			'instructions' => 'Amenities the property offers, such as WiFi, Parking, Restaurant, etc. Checked means the property DOES offer this amenity. Unchecked means they do NOT offer this amenity.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'collapsed' => '',
			'min' => 0,
			'max' => 0,
			'layout' => 'table',
			'button_label' => '',
			'sub_fields' => array(
				array(
					'key' => 'field_5e7e3e4b2eab2',
					'label' => 'Name',
					'name' => 'name',
					'type' => 'text',
					'instructions' => '',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e7e3e8f6279b',
					'label' => 'True or False',
					'name' => 'true_or_false',
					'type' => 'true_false',
					'instructions' => '',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '',
						'class' => '',
						'id' => '',
					),
					'message' => '',
					'default_value' => 1,
					'ui' => 0,
					'ui_on_text' => '',
					'ui_off_text' => '',
				),
			),
		),
		array(
			'key' => 'field_5e7e334f41293',
			'label' => 'Geolocation Values',
			'name' => '',
			'type' => 'accordion',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'open' => 1,
			'multi_expand' => 1,
			'endpoint' => 0,
		),
		array(
			'key' => 'field_5e7e33b941297',
			'label' => 'Area',
			'name' => 'schema_area',
			'type' => 'text',
			'instructions' => 'Everything after /wiki/ on the description page - https://en.wikipedia.org/wiki/Boston',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'default_value' => '',
			'placeholder' => '',
			'prepend' => '',
			'append' => '',
			'maxlength' => '',
		),
		array(
			'key' => 'field_5e7e339441295',
			'label' => 'Street Address',
			'name' => 'schema_street_address',
			'type' => 'text',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'default_value' => '',
			'placeholder' => '',
			'prepend' => '',
			'append' => '',
			'maxlength' => '',
		),
		array(
			'key' => 'field_5e7e33a741296',
			'label' => 'City',
			'name' => 'schema_city',
			'type' => 'text',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '40',
				'class' => '',
				'id' => '',
			),
			'default_value' => '',
			'placeholder' => '',
			'prepend' => '',
			'append' => '',
			'maxlength' => '',
		),
		array(
			'key' => 'field_5e7e36b565475',
			'label' => 'State, Region or Province',
			'name' => 'schema_state',
			'type' => 'text',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '20',
				'class' => '',
				'id' => '',
			),
			'default_value' => '',
			'placeholder' => '',
			'prepend' => '',
			'append' => '',
			'maxlength' => '',
		),
		array(
			'key' => 'field_5e7e356f4129b',
			'label' => 'ZIP Code',
			'name' => 'schema_zip',
			'type' => 'text',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '20',
				'class' => '',
				'id' => '',
			),
			'default_value' => '',
			'placeholder' => '',
			'prepend' => '',
			'append' => '',
			'maxlength' => '',
		),
		array(
			'key' => 'field_5e7e345a41298',
			'label' => 'Country',
			'name' => 'schema_country',
			'type' => 'text',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '20',
				'class' => '',
				'id' => '',
			),
			'default_value' => '',
			'placeholder' => '',
			'prepend' => '',
			'append' => '',
			'maxlength' => '',
		),
		array(
			'key' => 'field_5e7e352941299',
			'label' => 'Latitude',
			'name' => 'schema_latitude',
			'type' => 'text',
			'instructions' => 'https://www.latlong.net/ - Enter Address',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '50',
				'class' => '',
				'id' => '',
			),
			'default_value' => '',
			'placeholder' => '',
			'prepend' => '',
			'append' => '',
			'maxlength' => '',
		),
		array(
			'key' => 'field_5e7e354f4129a',
			'label' => 'Longitude',
			'name' => 'schema_longitude',
			'type' => 'text',
			'instructions' => 'https://www.latlong.net/ - Enter Address',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '50',
				'class' => '',
				'id' => '',
			),
			'default_value' => '',
			'placeholder' => '',
			'prepend' => '',
			'append' => '',
			'maxlength' => '',
		),
		array(
			'key' => 'field_5e7e336e41294',
			'label' => 'End Geolocation',
			'name' => '',
			'type' => 'accordion',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'open' => 0,
			'multi_expand' => 0,
			'endpoint' => 1,
		),
		array(
			'key' => 'field_5e7e386d6d998',
			'label' => 'Review Schema',
			'name' => '',
			'type' => 'accordion',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'open' => 1,
			'multi_expand' => 1,
			'endpoint' => 0,
		),
		array(
			'key' => 'field_5e7e38bd6d99d',
			'label' => 'Review URL',
			'name' => 'schema_review_url',
			'type' => 'url',
			'instructions' => 'Find a good site with plenty of reviews about the property.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '60',
				'class' => '',
				'id' => '',
			),
			'default_value' => '',
			'placeholder' => '',
		),
		array(
			'key' => 'field_5e7e38946d99a',
			'label' => 'Review Low',
			'name' => 'schema_review_low',
			'type' => 'text',
			'instructions' => 'What is the worst possible rating on that site?',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '10',
				'class' => '',
				'id' => '',
			),
			'default_value' => '',
			'placeholder' => '',
			'prepend' => '',
			'append' => '',
			'maxlength' => '',
		),
		array(
			'key' => 'field_5e7e38836d999',
			'label' => 'Review High',
			'name' => 'schema_review_high',
			'type' => 'text',
			'instructions' => 'What is the best possible rating on that site?',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '10',
				'class' => '',
				'id' => '',
			),
			'default_value' => '',
			'placeholder' => '',
			'prepend' => '',
			'append' => '',
			'maxlength' => '',
		),
		array(
			'key' => 'field_5e7e38a66d99b',
			'label' => 'Review Average',
			'name' => 'schema_review_average',
			'type' => 'text',
			'instructions' => 'What is the average rating for the property on that site?',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '10',
				'class' => '',
				'id' => '',
			),
			'default_value' => '',
			'placeholder' => '',
			'prepend' => '',
			'append' => '',
			'maxlength' => '',
		),
		array(
			'key' => 'field_5e7e38b16d99c',
			'label' => 'Total Reviews',
			'name' => 'schema_total_reviews',
			'type' => 'text',
			'instructions' => 'How many total reviews for the property are on that site?',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '10',
				'class' => '',
				'id' => '',
			),
			'default_value' => '',
			'placeholder' => '',
			'prepend' => '',
			'append' => '',
			'maxlength' => '',
		),
		array(
			'key' => 'field_5e7e38d56d99e',
			'label' => 'End Review Schema',
			'name' => '',
			'type' => 'accordion',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'open' => 0,
			'multi_expand' => 0,
			'endpoint' => 1,
		),
	),
	'location' => array(
		array(
			array(
				'param' => 'options_page',
				'operator' => '==',
				'value' => 'acf-options-schema-options',
			),
		),
	),
	'menu_order' => 0,
	'position' => 'normal',
	'style' => 'default',
	'label_placement' => 'top',
	'instruction_placement' => 'label',
	'hide_on_screen' => '',
	'active' => true,
	'description' => '',
));

acf_add_local_field_group(array(
	'key' => 'group_5e25ec0c6f671',
	'title' => 'Theme Options: Typography',
	'fields' => array(
		array(
			'key' => 'field_5e25ec1c8a459',
			'label' => 'Font scripts or style sheet links for Google Fonts, TypeKit, etc.',
			'name' => 'typography_scripts',
			'type' => 'textarea',
			'instructions' => 'Typically a stylesheet link like <link href="https://fonts.googleapis.com/css?family=Lora:400,700|Oswald|Raleway:400,700&display=swap" rel="stylesheet"> or a full TypeKit script code. Anything you put in here will go directly into the page, so be careful. You can have multiple link codes, if you want to mix and match fonts from different providers.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'default_value' => '',
			'placeholder' => '',
			'maxlength' => '',
			'rows' => '',
			'new_lines' => '',
		),
		array(
			'key' => 'field_5e25ef391fd56',
			'label' => 'Pre-set Font Options',
			'name' => '',
			'type' => 'tab',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'placement' => 'top',
			'endpoint' => 0,
		),
		array(
			'key' => 'field_5e26076ce46ba',
			'label' => 'About pre-set typography',
			'name' => '',
			'type' => 'message',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'message' => 'The theme comes with a number of designed style elements. This is where you can override pre-set styles like h1, h2, buttons, etc.',
			'new_lines' => 'wpautop',
			'esc_html' => 0,
		),
		array(
			'key' => 'field_5e261e4ff62fd',
			'label' => 'Top Nav Typography',
			'name' => '',
			'type' => 'accordion',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'open' => 1,
			'multi_expand' => 1,
			'endpoint' => 0,
		),
		array(
			'key' => 'field_5e261915e79e3',
			'label' => 'Top Nav',
			'name' => 'nav_typography',
			'type' => 'group',
			'instructions' => 'Set the typography for the top nav bar.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'layout' => 'block',
			'sub_fields' => array(
				array(
					'key' => 'field_5e261915e79e4',
					'label' => 'Font Identifier',
					'name' => 'font',
					'type' => 'text',
					'instructions' => 'Enter the font stack here (like "Oswald", sans-serif).',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e261915e79e5',
					'label' => 'Font Size',
					'name' => 'size',
					'type' => 'text',
					'instructions' => 'Enter the size and measurement for the font here (i.e. 18px, 1.5em, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e261915e79e6',
					'label' => 'Font Weight',
					'name' => 'font_weight',
					'type' => 'text',
					'instructions' => 'Enter the font weight here (i.e. bold, 100, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e261915e79e7',
					'label' => 'Line Height',
					'name' => 'line_height',
					'type' => 'text',
					'instructions' => 'Enter the letter spacing for the font here (i.e. 1px, 1rem, initial, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e261915e79e8',
					'label' => 'Letter Spacing',
					'name' => 'letter_spacing',
					'type' => 'text',
					'instructions' => 'Enter the letter spacing for the font here (i.e. 1px, 1rem, initial, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e261915e79e9',
					'label' => 'Text Transform',
					'name' => 'text_transform',
					'type' => 'select',
					'instructions' => 'Select the type of text transformation this font style should have (uppercase, lowercase, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'choices' => array(
						'none' => 'none (text remains exactly as typed',
						'lowercase' => 'Lowercase (makes all of the letters in the selected text lowercase',
						'uppercase' => 'Uppercase (makes all of the letters in the selected text uppercase',
						'capitalize' => 'Capitalize (capitalizes the first letter of each word in the selected text',
						'inherit' => 'Inherit (gives the text the case and capitalization of its parent',
					),
					'default_value' => array(
					),
					'allow_null' => 1,
					'multiple' => 0,
					'ui' => 0,
					'return_format' => 'value',
					'ajax' => 0,
					'placeholder' => '',
				),
			),
		),
		array(
			'key' => 'field_5e261e69f62fe',
			'label' => 'End Top Nav Accordion',
			'name' => '',
			'type' => 'accordion',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'open' => 0,
			'multi_expand' => 0,
			'endpoint' => 1,
		),
		array(
			'key' => 'field_5e261f2246022',
			'label' => '',
			'name' => '',
			'type' => 'accordion',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'open' => 0,
			'multi_expand' => 0,
			'endpoint' => 1,
		),
		array(
			'key' => 'field_5e261efe46021',
			'label' => 'Body Typography',
			'name' => '',
			'type' => 'accordion',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'open' => 0,
			'multi_expand' => 1,
			'endpoint' => 0,
		),
		array(
			'key' => 'field_5e2619f343f45',
			'label' => 'Body (.font-body)',
			'name' => 'body_typography',
			'type' => 'group',
			'instructions' => 'Set the typography for default body text (paragraphs, blog content, etc.)',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'layout' => 'block',
			'sub_fields' => array(
				array(
					'key' => 'field_5e2619f343f46',
					'label' => 'Font Identifier',
					'name' => 'font',
					'type' => 'text',
					'instructions' => 'Enter the font stack here (like "Oswald", sans-serif).',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e2619f343f47',
					'label' => 'Font Size',
					'name' => 'size',
					'type' => 'text',
					'instructions' => 'Enter the size and measurement for the font here (i.e. 18px, 1.5em, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e2619f343f48',
					'label' => 'Font Weight',
					'name' => 'font_weight',
					'type' => 'text',
					'instructions' => 'Enter the font weight here (i.e. bold, 100, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e2619f343f49',
					'label' => 'Line Height',
					'name' => 'line_height',
					'type' => 'text',
					'instructions' => 'Enter the letter spacing for the font here (i.e. 1px, 1rem, initial, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e2619f343f4a',
					'label' => 'Letter Spacing',
					'name' => 'letter_spacing',
					'type' => 'text',
					'instructions' => 'Enter the letter spacing for the font here (i.e. 1px, 1rem, initial, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e2619f343f4b',
					'label' => 'Text Transform',
					'name' => 'text_transform',
					'type' => 'select',
					'instructions' => 'Select the type of text transformation this font style should have (uppercase, lowercase, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'choices' => array(
						'none' => 'none (text remains exactly as typed',
						'lowercase' => 'Lowercase (makes all of the letters in the selected text lowercase',
						'uppercase' => 'Uppercase (makes all of the letters in the selected text uppercase',
						'capitalize' => 'Capitalize (capitalizes the first letter of each word in the selected text',
						'inherit' => 'Inherit (gives the text the case and capitalization of its parent',
					),
					'default_value' => array(
					),
					'allow_null' => 1,
					'multiple' => 0,
					'ui' => 0,
					'return_format' => 'value',
					'ajax' => 0,
					'placeholder' => '',
				),
			),
		),
		array(
			'key' => 'field_5e2619b643f3e',
			'label' => 'Inline Text Links',
			'name' => 'inline_link_typography',
			'type' => 'group',
			'instructions' => 'Styling for links inside text blocks (i.e. not the navigation menus in the header or footer, or CTA Buttons). In theory this will all be pretty much the same as the body entries.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'layout' => 'block',
			'sub_fields' => array(
				array(
					'key' => 'field_5e2619b643f3f',
					'label' => 'Font Identifier',
					'name' => 'font',
					'type' => 'text',
					'instructions' => 'Enter the font stack here (like "Oswald", sans-serif).',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e2619b643f40',
					'label' => 'Font Size',
					'name' => 'size',
					'type' => 'text',
					'instructions' => 'Enter the size and measurement for the font here (i.e. 18px, 1.5em, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e2619b643f41',
					'label' => 'Font Weight',
					'name' => 'font_weight',
					'type' => 'text',
					'instructions' => 'Enter the font weight here (i.e. bold, 100, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e2619b643f42',
					'label' => 'Line Height',
					'name' => 'line_height',
					'type' => 'text',
					'instructions' => 'Enter the letter spacing for the font here (i.e. 1px, 1rem, initial, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e2619b643f43',
					'label' => 'Letter Spacing',
					'name' => 'letter_spacing',
					'type' => 'text',
					'instructions' => 'Enter the letter spacing for the font here (i.e. 1px, 1rem, initial, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e2619b643f44',
					'label' => 'Text Transform',
					'name' => 'text_transform',
					'type' => 'select',
					'instructions' => 'Select the type of text transformation this font style should have (uppercase, lowercase, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'choices' => array(
						'none' => 'none (text remains exactly as typed',
						'lowercase' => 'Lowercase (makes all of the letters in the selected text lowercase',
						'uppercase' => 'Uppercase (makes all of the letters in the selected text uppercase',
						'capitalize' => 'Capitalize (capitalizes the first letter of each word in the selected text',
						'inherit' => 'Inherit (gives the text the case and capitalization of its parent',
					),
					'default_value' => array(
					),
					'allow_null' => 1,
					'multiple' => 0,
					'ui' => 0,
					'return_format' => 'value',
					'ajax' => 0,
					'placeholder' => '',
				),
			),
		),
		array(
			'key' => 'field_5e261ec531517',
			'label' => '',
			'name' => '',
			'type' => 'accordion',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'open' => 0,
			'multi_expand' => 0,
			'endpoint' => 1,
		),
		array(
			'key' => 'field_5e261f6b7a8f1',
			'label' => 'Heading Typography (H1, H2, etc.)',
			'name' => '',
			'type' => 'accordion',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'open' => 0,
			'multi_expand' => 1,
			'endpoint' => 0,
		),
		array(
			'key' => 'field_5e66bcccd2cf3',
			'label' => 'Default Headline Font (.font-heading)',
			'name' => 'default_headline_font',
			'type' => 'text',
			'instructions' => 'If you want to set a general font family for all headings without having to go one by one, you can set it here. This will also set up a class called .font-heading that can be used on other elements throughout the site to apply this family without the other typography settings of a dedicated headline type.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'default_value' => '',
			'placeholder' => '',
			'prepend' => '',
			'append' => '',
			'maxlength' => '',
		),
		array(
			'key' => 'field_5e261a2043f4c',
			'label' => 'H1 Typography',
			'name' => 'h1_typography',
			'type' => 'group',
			'instructions' => 'Set the typography for default H1 heading tags.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'layout' => 'block',
			'sub_fields' => array(
				array(
					'key' => 'field_5e261a2043f4d',
					'label' => 'Font Identifier',
					'name' => 'font',
					'type' => 'text',
					'instructions' => 'Enter the font stack here (like "Oswald", sans-serif).',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e261a2043f4e',
					'label' => 'Font Size',
					'name' => 'size',
					'type' => 'text',
					'instructions' => 'Enter the size and measurement for the font here (i.e. 18px, 1.5em, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e261a2043f4f',
					'label' => 'Font Weight',
					'name' => 'font_weight',
					'type' => 'text',
					'instructions' => 'Enter the font weight here (i.e. bold, 100, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e261a2043f50',
					'label' => 'Line Height',
					'name' => 'line_height',
					'type' => 'text',
					'instructions' => 'Enter the letter spacing for the font here (i.e. 1px, 1rem, initial, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e261a2043f51',
					'label' => 'Letter Spacing',
					'name' => 'letter_spacing',
					'type' => 'text',
					'instructions' => 'Enter the letter spacing for the font here (i.e. 1px, 1rem, initial, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e261a2043f52',
					'label' => 'Text Transform',
					'name' => 'text_transform',
					'type' => 'select',
					'instructions' => 'Select the type of text transformation this font style should have (uppercase, lowercase, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'choices' => array(
						'none' => 'none (text remains exactly as typed',
						'lowercase' => 'Lowercase (makes all of the letters in the selected text lowercase',
						'uppercase' => 'Uppercase (makes all of the letters in the selected text uppercase',
						'capitalize' => 'Capitalize (capitalizes the first letter of each word in the selected text',
						'inherit' => 'Inherit (gives the text the case and capitalization of its parent',
					),
					'default_value' => array(
					),
					'allow_null' => 1,
					'multiple' => 0,
					'ui' => 0,
					'return_format' => 'value',
					'ajax' => 0,
					'placeholder' => '',
				),
			),
		),
		array(
			'key' => 'field_5e261a6443f53',
			'label' => 'H2 Typography',
			'name' => 'h2_typography',
			'type' => 'group',
			'instructions' => 'Set the typography for default H2 heading tags.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'layout' => 'block',
			'sub_fields' => array(
				array(
					'key' => 'field_5e261a6443f54',
					'label' => 'Font Identifier',
					'name' => 'font',
					'type' => 'text',
					'instructions' => 'Enter the font stack here (like "Oswald", sans-serif).',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e261a6443f55',
					'label' => 'Font Size',
					'name' => 'size',
					'type' => 'text',
					'instructions' => 'Enter the size and measurement for the font here (i.e. 18px, 1.5em, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e261a6443f56',
					'label' => 'Font Weight',
					'name' => 'font_weight',
					'type' => 'text',
					'instructions' => 'Enter the font weight here (i.e. bold, 100, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e261a6443f57',
					'label' => 'Line Height',
					'name' => 'line_height',
					'type' => 'text',
					'instructions' => 'Enter the letter spacing for the font here (i.e. 1px, 1rem, initial, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e261a6443f58',
					'label' => 'Letter Spacing',
					'name' => 'letter_spacing',
					'type' => 'text',
					'instructions' => 'Enter the letter spacing for the font here (i.e. 1px, 1rem, initial, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e261a6443f59',
					'label' => 'Text Transform',
					'name' => 'text_transform',
					'type' => 'select',
					'instructions' => 'Select the type of text transformation this font style should have (uppercase, lowercase, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'choices' => array(
						'none' => 'none (text remains exactly as typed',
						'lowercase' => 'Lowercase (makes all of the letters in the selected text lowercase',
						'uppercase' => 'Uppercase (makes all of the letters in the selected text uppercase',
						'capitalize' => 'Capitalize (capitalizes the first letter of each word in the selected text',
						'inherit' => 'Inherit (gives the text the case and capitalization of its parent',
					),
					'default_value' => array(
					),
					'allow_null' => 1,
					'multiple' => 0,
					'ui' => 0,
					'return_format' => 'value',
					'ajax' => 0,
					'placeholder' => '',
				),
			),
		),
		array(
			'key' => 'field_5e261a8443f5a',
			'label' => 'H3 Typography',
			'name' => 'h3_typography',
			'type' => 'group',
			'instructions' => 'Set the typography for default H3 heading tags.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'layout' => 'block',
			'sub_fields' => array(
				array(
					'key' => 'field_5e261a8443f5b',
					'label' => 'Font Identifier',
					'name' => 'font',
					'type' => 'text',
					'instructions' => 'Enter the font stack here (like "Oswald", sans-serif).',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e261a8443f5c',
					'label' => 'Font Size',
					'name' => 'size',
					'type' => 'text',
					'instructions' => 'Enter the size and measurement for the font here (i.e. 18px, 1.5em, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e261a8443f5d',
					'label' => 'Font Weight',
					'name' => 'font_weight',
					'type' => 'text',
					'instructions' => 'Enter the font weight here (i.e. bold, 100, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e261a8443f5e',
					'label' => 'Line Height',
					'name' => 'line_height',
					'type' => 'text',
					'instructions' => 'Enter the letter spacing for the font here (i.e. 1px, 1rem, initial, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e261a8443f5f',
					'label' => 'Letter Spacing',
					'name' => 'letter_spacing',
					'type' => 'text',
					'instructions' => 'Enter the letter spacing for the font here (i.e. 1px, 1rem, initial, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e261a8443f60',
					'label' => 'Text Transform',
					'name' => 'text_transform',
					'type' => 'select',
					'instructions' => 'Select the type of text transformation this font style should have (uppercase, lowercase, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'choices' => array(
						'none' => 'none (text remains exactly as typed',
						'lowercase' => 'Lowercase (makes all of the letters in the selected text lowercase',
						'uppercase' => 'Uppercase (makes all of the letters in the selected text uppercase',
						'capitalize' => 'Capitalize (capitalizes the first letter of each word in the selected text',
						'inherit' => 'Inherit (gives the text the case and capitalization of its parent',
					),
					'default_value' => array(
					),
					'allow_null' => 1,
					'multiple' => 0,
					'ui' => 0,
					'return_format' => 'value',
					'ajax' => 0,
					'placeholder' => '',
				),
			),
		),
		array(
			'key' => 'field_5e261a9543f61',
			'label' => 'H4 Typography',
			'name' => 'h4_typography',
			'type' => 'group',
			'instructions' => 'Set the typography for default H4 heading tags.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'layout' => 'block',
			'sub_fields' => array(
				array(
					'key' => 'field_5e261a9543f62',
					'label' => 'Font Identifier',
					'name' => 'font',
					'type' => 'text',
					'instructions' => 'Enter the font stack here (like "Oswald", sans-serif).',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e261a9543f63',
					'label' => 'Font Size',
					'name' => 'size',
					'type' => 'text',
					'instructions' => 'Enter the size and measurement for the font here (i.e. 18px, 1.5em, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e261a9543f64',
					'label' => 'Font Weight',
					'name' => 'font_weight',
					'type' => 'text',
					'instructions' => 'Enter the font weight here (i.e. bold, 100, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e261a9543f65',
					'label' => 'Line Height',
					'name' => 'line_height',
					'type' => 'text',
					'instructions' => 'Enter the letter spacing for the font here (i.e. 1px, 1rem, initial, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e261a9543f66',
					'label' => 'Letter Spacing',
					'name' => 'letter_spacing',
					'type' => 'text',
					'instructions' => 'Enter the letter spacing for the font here (i.e. 1px, 1rem, initial, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e261a9543f67',
					'label' => 'Text Transform',
					'name' => 'text_transform',
					'type' => 'select',
					'instructions' => 'Select the type of text transformation this font style should have (uppercase, lowercase, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'choices' => array(
						'none' => 'none (text remains exactly as typed',
						'lowercase' => 'Lowercase (makes all of the letters in the selected text lowercase',
						'uppercase' => 'Uppercase (makes all of the letters in the selected text uppercase',
						'capitalize' => 'Capitalize (capitalizes the first letter of each word in the selected text',
						'inherit' => 'Inherit (gives the text the case and capitalization of its parent',
					),
					'default_value' => array(
					),
					'allow_null' => 1,
					'multiple' => 0,
					'ui' => 0,
					'return_format' => 'value',
					'ajax' => 0,
					'placeholder' => '',
				),
			),
		),
		array(
			'key' => 'field_5e261f847a8f2',
			'label' => '',
			'name' => '',
			'type' => 'accordion',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'open' => 0,
			'multi_expand' => 0,
			'endpoint' => 1,
		),
		array(
			'key' => 'field_5e2605cd5812b',
			'label' => '',
			'name' => '',
			'type' => 'accordion',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'open' => 0,
			'multi_expand' => 0,
			'endpoint' => 1,
		),
		array(
			'key' => 'field_5e26064f9a2ba',
			'label' => 'Custom Typography',
			'name' => '',
			'type' => 'tab',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'placement' => 'top',
			'endpoint' => 0,
		),
		array(
			'key' => 'field_5e2607abf4258',
			'label' => 'How to add new styles or override existing styles',
			'name' => '',
			'type' => 'message',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'message' => 'This theme allows you to enter custom class styles. If you wanted to change the color of a specific button on a specific page, for instance, you could enter the selector for that exact button. Or you could override all H1 styles on a given template type here as well.

If you want this font group to be applied to a custom class, enter it here (include the "." before class names so it can be used for elements). Separate multiple class names with a comma and a space (like ".title-font, h1"). If left blank, the class name will just be ".font-#".

Knowledge of CSS selectors is essential to make the best use of this functionality.',
			'new_lines' => 'wpautop',
			'esc_html' => 0,
		),
		array(
			'key' => 'field_5e26024a01f5d',
			'label' => 'Custom Typograhy',
			'name' => 'typography_overrides',
			'type' => 'repeater',
			'instructions' => 'Override existing typography styles for specific classes or add custom ones.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'collapsed' => '',
			'min' => 0,
			'max' => 0,
			'layout' => 'block',
			'button_label' => 'Add Custom Style',
			'sub_fields' => array(
				array(
					'key' => 'field_5e26024a01f5e',
					'label' => 'Class Name',
					'name' => 'class',
					'type' => 'text',
					'instructions' => 'If you want this font group to be applied to a custom class, enter it here (include the "." before class names so it can be used for elements). Separate multiple class names with a comma and a space (like ".title-font, h1"). If left blank, the class name will just be ".font-#".',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e26024a01f5f',
					'label' => 'Font Name',
					'name' => 'name',
					'type' => 'text',
					'instructions' => 'Ideally, put the entire font stack here, like "\'Playfair Display\', serif".\'',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e26024a01f60',
					'label' => 'Font Size',
					'name' => 'size',
					'type' => 'text',
					'instructions' => 'Enter the size and measurement for the font here (i.e. 18px, 1.5em, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e2611f151f8d',
					'label' => 'Line Height',
					'name' => 'line_height',
					'type' => 'text',
					'instructions' => 'Enter the line height for the font here (i.e. 1.5, 200%, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e261572a21e8',
					'label' => 'Letter Spacing',
					'name' => 'letter_spacing',
					'type' => 'text',
					'instructions' => 'Enter the letter spacing for the font here (i.e. 1px, 1rem, initial, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'default_value' => '',
					'placeholder' => '',
					'prepend' => '',
					'append' => '',
					'maxlength' => '',
				),
				array(
					'key' => 'field_5e26120551f8e',
					'label' => 'Text Transform',
					'name' => 'text_transform',
					'type' => 'select',
					'instructions' => 'Select the type of text transformation this font style should have (uppercase, lowercase, etc.)',
					'required' => 0,
					'conditional_logic' => 0,
					'wrapper' => array(
						'width' => '33',
						'class' => '',
						'id' => '',
					),
					'choices' => array(
						'none' => 'none (text remains exactly as typed',
						'lowercase' => 'Lowercase (makes all of the letters in the selected text lowercase',
						'uppercase' => 'Uppercase (makes all of the letters in the selected text uppercase',
						'capitalize' => 'Capitalize (capitalizes the first letter of each word in the selected text',
						'inherit' => 'Inherit (gives the text the case and capitalization of its parent',
					),
					'default_value' => array(
					),
					'allow_null' => 1,
					'multiple' => 0,
					'ui' => 0,
					'return_format' => 'value',
					'ajax' => 0,
					'placeholder' => '',
				),
			),
		),
		array(
			'key' => 'field_5e260619586a1',
			'label' => '',
			'name' => '',
			'type' => 'tab',
			'instructions' => '',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'placement' => 'top',
			'endpoint' => 1,
		),
	),
	'location' => array(
		array(
			array(
				'param' => 'options_page',
				'operator' => '==',
				'value' => 'acf-options-typography',
			),
		),
	),
	'menu_order' => 0,
	'position' => 'normal',
	'style' => 'default',
	'label_placement' => 'top',
	'instruction_placement' => 'label',
	'hide_on_screen' => '',
	'active' => true,
	'description' => '',
));

endif;

// =========================================
//	THEME-WIDE BLOCKS OR ACF OPTIONS
// =========================================

// Page Options for background colors, etc.
if( function_exists('acf_add_local_field_group') ):

acf_add_local_field_group(array(
	'key' => 'group_5e693c1a4479a',
	'title' => 'Page Options',
	'fields' => array(
		array(
			'key' => 'field_5e693c3660e57',
			'label' => 'Themed Background Color (optional)',
			'name' => 'page_background_color',
			'type' => 'select',
			'instructions' => 'Choose a background color for the entire page.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '50',
				'class' => '',
				'id' => '',
			),
			'choices' => array(
				'bg-c1' => 'Primary Theme Color from Theme Options',
				'bg-c2' => 'Secondary Theme Color from Theme Options',
				'bg-white' => 'White Theme Color from Theme Options',
				'bg-black' => 'Black Theme Color from Theme Options',
			),
			'default_value' => array(
			),
			'allow_null' => 1,
			'multiple' => 0,
			'ui' => 0,
			'return_format' => 'value',
			'ajax' => 0,
			'placeholder' => '',
		),
		array(
			'key' => 'field_5e694228858fb',
			'label' => 'Custom Background Color (optional)',
			'name' => 'page_background_color_custom',
			'type' => 'color_picker',
			'instructions' => 'If a custom background color is required instead of one of the pre-set theme colors, enter it here.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '50',
				'class' => '',
				'id' => '',
			),
			'default_value' => '',
		),
		array(
			'key' => 'field_5e693c9660e58',
			'label' => 'Background Image (optional)',
			'name' => 'page_background_image',
			'type' => 'image',
			'instructions' => 'Choose a pattern or image to use as a background image for the entire page.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '33',
				'class' => '',
				'id' => '',
			),
			'return_format' => 'url',
			'preview_size' => 'medium',
			'library' => 'all',
			'min_width' => '',
			'min_height' => '',
			'min_size' => '',
			'max_width' => '',
			'max_height' => '',
			'max_size' => '',
			'mime_types' => '',
		),
		array(
			'key' => 'field_5e693cc460e59',
			'label' => 'Background Image Type',
			'name' => 'page_background_image_type',
			'type' => 'select',
			'instructions' => 'Choose how the background image should be laid out.',
			'required' => 0,
			'conditional_logic' => array(
				array(
					array(
						'field' => 'field_5e693c9660e58',
						'operator' => '!=empty',
					),
				),
			),
			'wrapper' => array(
				'width' => '33',
				'class' => '',
				'id' => '',
			),
			'choices' => array(
				'tiled' => 'Tiled - Repeat the image over and over to fill the entire space(appropriate for texture patterns)',
				'cover' => 'Cover - Fill the entire page with the background image, even if that means stretching the image to a very large size',
				'contain' => 'Contain - Fit the entire image into the page, even if that results in some empty space',
			),
			'default_value' => array(
				0 => 'tiled',
			),
			'allow_null' => 0,
			'multiple' => 0,
			'ui' => 0,
			'return_format' => 'value',
			'ajax' => 0,
			'placeholder' => '',
		),
		array(
			'key' => 'field_5e693d4060e5a',
			'label' => 'Background Image Location',
			'name' => 'page_background_image_location',
			'type' => 'select',
			'instructions' => 'For contained images, choose where the image should go on the page.',
			'required' => 0,
			'conditional_logic' => array(
				array(
					array(
						'field' => 'field_5e693cc460e59',
						'operator' => '==',
						'value' => 'contain',
					),
				),
			),
			'wrapper' => array(
				'width' => '33',
				'class' => '',
				'id' => '',
			),
			'choices' => array(
				'top' => 'The top of the page (starting just below the header)',
				'middle' => 'The middle of the page',
				'bottom' => 'The bottom of the page (just above the footer)',
			),
			'default_value' => array(
				0 => 'top',
			),
			'allow_null' => 0,
			'multiple' => 0,
			'ui' => 0,
			'return_format' => 'value',
			'ajax' => 0,
			'placeholder' => '',
		),
	),
	'location' => array(
		array(
			array(
				'param' => 'page_template',
				'operator' => '==',
				'value' => 'default',
			),
		),
		array(
			array(
				'param' => 'post_type',
				'operator' => '==',
				'value' => 'accommodation',
			),
		),
		array(
			array(
				'param' => 'post_type',
				'operator' => '==',
				'value' => 'special',
			),
		),
		array(
			array(
				'param' => 'page_template',
				'operator' => '==',
				'value' => 'blog-archive.php',
			),
		),
	),
	'menu_order' => 0,
	'position' => 'normal',
	'style' => 'default',
	'label_placement' => 'top',
	'instruction_placement' => 'label',
	'hide_on_screen' => '',
	'active' => true,
	'description' => '',
));

endif;

if( function_exists('acf_add_local_field_group') ):

acf_add_local_field_group(array(
	'key' => 'group_5f5255f5e36f0',
	'title' => 'Alert Banner',
	'fields' => array(
		array(
			'key' => 'field_5f525602324ff',
			'label' => 'Alert Message',
			'name' => 'alert_message',
			'type' => 'wysiwyg',
			'instructions' => 'Enter the text to appear in the alert banner. HTML is allowed.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '',
				'class' => '',
				'id' => '',
			),
			'default_value' => '',
			'tabs' => 'all',
			'toolbar' => 'full',
			'media_upload' => 1,
			'delay' => 0,
		),
		array(
			'key' => 'field_5f52562232500',
			'label' => 'Background Color',
			'name' => 'background_color',
			'type' => 'select',
			'instructions' => 'Choose a pre-set background color for the alert banner.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '25',
				'class' => '',
				'id' => '',
			),
			'choices' => array(
				'bg-c1' => 'Theme Primary Color',
				'bg-c2' => 'Theme Secondary Color',
				'bg-black' => 'Theme Black Color',
				'bg-white' => 'Theme White Color',
			),
			'default_value' => array(
				0 => 'bg-c1',
			),
			'allow_null' => 0,
			'multiple' => 0,
			'ui' => 0,
			'return_format' => 'value',
			'ajax' => 0,
			'placeholder' => '',
		),
		array(
			'key' => 'field_5f52566b32501',
			'label' => 'Background Color (custom)',
			'name' => 'background_color_custom',
			'type' => 'color_picker',
			'instructions' => 'Choose a custom, non-theme background color for the alert banner.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '25',
				'class' => '',
				'id' => '',
			),
			'default_value' => '',
		),
		array(
			'key' => 'field_5f52568832502',
			'label' => 'Text Color',
			'name' => 'text_color',
			'type' => 'select',
			'instructions' => 'Choose a color for the text in the alert banner.',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '25',
				'class' => '',
				'id' => '',
			),
			'choices' => array(
				'fg-body' => 'Theme Body Color',
				'fg-c1' => 'Theme Primary Color',
				'fg-c2' => 'Theme Secondary Color',
				'fg-black' => 'Theme Black Color',
				'fg-white' => 'Theme White Color',
			),
			'default_value' => array(
				0 => 'fg-body',
			),
			'allow_null' => 0,
			'multiple' => 0,
			'ui' => 0,
			'return_format' => 'value',
			'ajax' => 0,
			'placeholder' => '',
		),
		array(
			'key' => 'field_5f5256fe32503',
			'label' => 'Close Icon',
			'name' => 'close_icon',
			'type' => 'text',
			'instructions' => 'Choose an icon from Font Awesome 5 (https://fontawesome.com/icons?d=gallery) to use as the close icon in the top right. Enter the full i tag, like &lt;i class="fas fa-times"&gt;&lt;/i&gt;',
			'required' => 0,
			'conditional_logic' => 0,
			'wrapper' => array(
				'width' => '25',
				'class' => '',
				'id' => '',
			),
			'default_value' => '<i class="fas fa-times"></i>',
			'placeholder' => '',
			'prepend' => '',
			'append' => '',
			'maxlength' => '',
		),
	),
	'location' => array(
		array(
			array(
				'param' => 'options_page',
				'operator' => '==',
				'value' => 'acf-options-global',
			),
		),
	),
	'menu_order' => 0,
	'position' => 'normal',
	'style' => 'default',
	'label_placement' => 'top',
	'instruction_placement' => 'label',
	'hide_on_screen' => '',
	'active' => true,
	'description' => '',
));

endif;
?>