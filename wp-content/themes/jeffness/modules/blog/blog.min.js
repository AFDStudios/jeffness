jQuery(document).ready(function(l){l(function(){l(".blog-archive-category-row a").on("click",function(e){e.preventDefault();var a=0,t=l(this).data("cat"),r=l(".blog-archive-category-wrapper .blog-archive-services-wrapper .selectric-wrapper .selectric .label").text(),o=l(".blog-archive-category-wrapper .blog-archive-services-wrapper .selectric-wrapper label .selectric-hide-select select option:contains("+r+")").val();l.ajax({url:ajaxloadcat.ajaxurl,type:"GET",data:{action:"blog_ajax_loadmore",offset:a,cat:t,service:o,get_post_type:"post"},success:function(e){l(".blog-archive-wrapper").empty(),l(".blog-archive-wrapper").append(e).fadeIn(),l(document.body).trigger("post-load"),a+=0}}),l(".blog-archive-category-row a").removeClass("active"),l(this).addClass("active")}),l("select").selectric({responsive:!0,inheritOriginalWidth:!0,arrowButtonMarkup:'<i class="far fa-angle-down"></i>',disableOnMobile:!1,nativeOnMobile:!1}),l("select").on("selectric-select",function(e,a,t){console.log("selectric clicked, value is "+a.value);var r=0,o=a.value,c=l(".blog-archive-category-row a.active").data("cat");l.ajax({url:ajaxloadcat.ajaxurl,type:"GET",data:{action:"blog_ajax_loadmore",offset:r,cat:c,service:o,get_post_type:"post"},success:function(e){l(".blog-archive-wrapper").empty(),l(".blog-archive-wrapper").append(e).fadeIn(),l(document.body).trigger("post-load"),r+=0}})}),l(".selectric-input, .selectric-hide-select").wrap("<label style='position: absolute; left: -10000px;' aria-hidden='true'>Hidden Label</label>")});var a=l(".blog-archive-wrapper").find(".hentry").length,t=a;l(document).on("click",".blog-load-more a",function(e){e.preventDefault(),console.log("click"),l(this).remove(),l.ajax({url:ajaxloadmore.ajaxurl,type:"GET",data:{action:"blog_ajax_loadmore",offset:a,get_post_type:"post"},success:function(e){l(".blog-archive-wrapper .hentry").last().after(e).fadeIn(),l(document.body).trigger("post-load"),a+=t}})})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
